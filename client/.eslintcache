[{"C:\\Users\\DAVID\\server\\client\\src\\index.js":"1","C:\\Users\\DAVID\\server\\client\\src\\App.js":"2","C:\\Users\\DAVID\\server\\client\\src\\views\\Register.js":"3","C:\\Users\\DAVID\\server\\client\\src\\helpers\\auth.js":"4","C:\\Users\\DAVID\\server\\client\\src\\utils\\AppRoute.js":"5","C:\\Users\\DAVID\\server\\client\\src\\components\\layout.js":"6","C:\\Users\\DAVID\\server\\client\\src\\views\\Verify.js":"7","C:\\Users\\DAVID\\server\\client\\src\\views\\Login.js":"8","C:\\Users\\DAVID\\server\\client\\src\\views\\ForgotPassword.js":"9","C:\\Users\\DAVID\\server\\client\\src\\views\\ResetPassword.js":"10"},{"size":1024,"mtime":1614125593181,"results":"11","hashOfConfig":"12"},{"size":352,"mtime":1612971706315,"results":"13","hashOfConfig":"12"},{"size":7340,"mtime":1614354977271,"results":"14","hashOfConfig":"12"},{"size":1530,"mtime":1612884676602,"results":"15","hashOfConfig":"12"},{"size":392,"mtime":1612971196750,"results":"16","hashOfConfig":"12"},{"size":1227,"mtime":1613789892879,"results":"17","hashOfConfig":"12"},{"size":2244,"mtime":1613668771825,"results":"18","hashOfConfig":"12"},{"size":4452,"mtime":1614354619813,"results":"19","hashOfConfig":"12"},{"size":3097,"mtime":1614354799777,"results":"20","hashOfConfig":"12"},{"size":4506,"mtime":1614354830001,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"oszgdj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\DAVID\\server\\client\\src\\index.js",[],["45","46"],"C:\\Users\\DAVID\\server\\client\\src\\App.js",[],"C:\\Users\\DAVID\\server\\client\\src\\views\\Register.js",["47"],"C:\\Users\\DAVID\\server\\client\\src\\helpers\\auth.js",[],"C:\\Users\\DAVID\\server\\client\\src\\utils\\AppRoute.js",[],"C:\\Users\\DAVID\\server\\client\\src\\components\\layout.js",[],"C:\\Users\\DAVID\\server\\client\\src\\views\\Verify.js",["48","49","50"],"import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport jwt from 'jsonwebtoken'\r\nimport axios from 'axios';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { isAuth } from \"../helpers/auth\"\r\nimport {\r\n    Row, Card, Button, Breadcrumb, Divider\r\n} from 'antd';\r\n\r\n\r\n\r\nconst Verify = () => {\r\n    const [formData, setFormData] = React.useState({\r\n        name: '',\r\n        token: '',\r\n        show: true\r\n    })\r\n    let { token } = useParams()\r\n    const { name, show } = formData\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n            xs: {\r\n                span: 24,\r\n                offset: 0,\r\n            },\r\n            sm: {\r\n                span: 16,\r\n                offset: 8,\r\n            },\r\n\r\n        },\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.post(`${process.env.REACT_APP_URL}/api/activate`, {\r\n            token\r\n        }).then(res => {\r\n            setFormData({ ...formData, show: false });\r\n            toast.success(res.data.message);\r\n        }).catch(err => {\r\n            toast.error(err.response.data.error)\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n\r\n        let name = jwt.decode(token)\r\n        if (token) {\r\n            setFormData({ ...formData, ...name })\r\n        }\r\n    }, []);\r\n\r\n\r\n    if (isAuth()) {\r\n        <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <Row justify=\"center\" align=\"middle\"  >\r\n                    <div className=\"ant-col ant-col-xs-24 ant-col-xl-8\">\r\n                        <Card justify=\"center\" align=\"middle\" >\r\n                            <h3>Hello {name}, Activate your account</h3>\r\n                            <Divider></Divider>\r\n                            <Button type=\"primary\" shape=\"round\" size=\"large\" onClick={e => handleSubmit(e)}>\r\n                                Activate email\r\n        </Button>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Verify\r\n","C:\\Users\\DAVID\\server\\client\\src\\views\\Login.js",["51"],"C:\\Users\\DAVID\\server\\client\\src\\views\\ForgotPassword.js",["52"],"C:\\Users\\DAVID\\server\\client\\src\\views\\ResetPassword.js",["53","54"],"import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Breadcrumb, Row, Card, Button\r\n} from 'antd';\r\n\r\n\r\nconst ResetPassword = ({ match }) => {\r\n    const [formData, setFormData] = React.useState({\r\n        password: \"\",\r\n        password2: \"\",\r\n        token: \"\",\r\n    })\r\n\r\n    const { password, token } = formData;\r\n\r\n    const onChange = (values) => {\r\n        setFormData({ ...formData, ...values })\r\n    }\r\n    const tailLayout = {\r\n        wrapperCol: {\r\n            offset: 8,\r\n            span: 16,\r\n        },\r\n    };\r\n    const handleChange = key => e => {\r\n        setFormData({ ...formData, [key]: e.target.value })\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n        if (password) {\r\n            axios.put(`${process.env.REACT_APP_URL}/api/passwords/reset`, {\r\n                newPassword: password,\r\n                resetPasswordLink: token\r\n            }).then(res => {\r\n                setFormData({\r\n                    ...formData,\r\n                    password: \"\",\r\n                    password2: \"\",\r\n                })\r\n\r\n                toast.success(res.data.message)\r\n\r\n\r\n            }).catch(err => {\r\n                toast.error(err.response.data.error)\r\n            })\r\n\r\n        } else {\r\n            toast.error('Fill all fields')\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let token = match.params.token\r\n        if (token) {\r\n            setFormData({ ...formData, token })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Reset Password</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\"><Row justify=\"center\" align=\"middle\"  >\r\n                <div className=\"ant-col ant-col-xs-24 ant-col-xl-8\">\r\n                    <Card>\r\n                        <Form\r\n                            layout='vertical'\r\n                            name=\"basic\"\r\n\r\n                            onFinish={handleSubmit}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange('password')}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                label=\"Confirm Password\"\r\n                                onChange={handleChange('password2')}\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(_, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n\r\n                                            return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Submit\r\n        </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":22,"column":11,"nodeType":"61","messageId":"62","endLine":22,"endColumn":21},{"ruleId":"59","severity":1,"message":"63","line":21,"column":19,"nodeType":"61","messageId":"62","endLine":21,"endColumn":23},{"ruleId":"59","severity":1,"message":"64","line":22,"column":11,"nodeType":"61","messageId":"62","endLine":22,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":52,"column":8,"nodeType":"67","endLine":52,"endColumn":10,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":20,"column":11,"nodeType":"61","messageId":"62","endLine":20,"endColumn":19},{"ruleId":"59","severity":1,"message":"69","line":18,"column":11,"nodeType":"61","messageId":"62","endLine":18,"endColumn":19},{"ruleId":"59","severity":1,"message":"69","line":20,"column":11,"nodeType":"61","messageId":"62","endLine":20,"endColumn":19},{"ruleId":"65","severity":1,"message":"70","line":64,"column":8,"nodeType":"67","endLine":64,"endColumn":10,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'formLayout' is assigned a value but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'tailFormItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'formData' and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["74"],"'onChange' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'formData' and 'match.params.token'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [formData, token]",{"range":"80","text":"81"},"Update the dependencies array to be: [formData, match.params.token]",{"range":"82","text":"83"},[1358,1360],"[formData, token]",[1524,1526],"[formData, match.params.token]"]