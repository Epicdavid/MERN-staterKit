[{"C:\\Users\\DAVID\\server\\client\\src\\index.js":"1","C:\\Users\\DAVID\\server\\client\\src\\App.js":"2","C:\\Users\\DAVID\\server\\client\\src\\views\\Register.js":"3","C:\\Users\\DAVID\\server\\client\\src\\helpers\\auth.js":"4","C:\\Users\\DAVID\\server\\client\\src\\utils\\AppRoute.js":"5","C:\\Users\\DAVID\\server\\client\\src\\components\\layout.js":"6","C:\\Users\\DAVID\\server\\client\\src\\views\\Verify.js":"7","C:\\Users\\DAVID\\server\\client\\src\\views\\Login.js":"8"},{"size":766,"mtime":1613256699138,"results":"9","hashOfConfig":"10"},{"size":352,"mtime":1612971706315,"results":"11","hashOfConfig":"10"},{"size":7338,"mtime":1613227095834,"results":"12","hashOfConfig":"10"},{"size":1530,"mtime":1612884676602,"results":"13","hashOfConfig":"10"},{"size":392,"mtime":1612971196750,"results":"14","hashOfConfig":"10"},{"size":1228,"mtime":1613227575184,"results":"15","hashOfConfig":"10"},{"size":2307,"mtime":1613227082009,"results":"16","hashOfConfig":"10"},{"size":3506,"mtime":1613257570849,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oszgdj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\DAVID\\server\\client\\src\\index.js",[],"C:\\Users\\DAVID\\server\\client\\src\\App.js",[],["38","39"],"C:\\Users\\DAVID\\server\\client\\src\\views\\Register.js",["40"],"import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip, Breadcrumb, Row, Card, Button\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { isAuth } from '../helpers/auth'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = React.useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    })\r\n    const [form] = Form.useForm();\r\n    const formLayout = 'vertical'\r\n\r\n\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n            xs: {\r\n                span: 24,\r\n                offset: 0,\r\n            },\r\n            sm: {\r\n                span: 16,\r\n                offset: 8,\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n\r\n    const { email, name, password, password2 } = formData\r\n\r\n    const handleChange = key => e => {\r\n        setFormData({ ...formData, [key]: e.target.value })\r\n\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n        if (name && email && password) {\r\n            if (password !== password2) {\r\n                toast.error(\"passwords don't match\");\r\n            } else {\r\n                axios.post(`${process.env.REACT_APP_URL}/api/register`, {\r\n                    name, email, password\r\n                }).then(res => {\r\n                    setFormData({\r\n                        ...formData,\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        password: \"\",\r\n                        password2: \"\"\r\n                    })\r\n\r\n                    toast.success(res.data.message)\r\n                }).catch(err => {\r\n                    toast.error(err.response.data.error)\r\n                })\r\n\r\n            }\r\n        } else {\r\n            toast.error('Fill all fields')\r\n        }\r\n    }\r\n    if (isAuth()) {\r\n        <Redirect to='/' />\r\n    }\r\n    return (\r\n        <>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Register</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <Row justify=\"center\" align=\"middle\"  >\r\n                    <div className=\"ant-col ant-col-xs-24 ant-col-xl-8\">\r\n                        <Card>\r\n                            <Form\r\n                                layout='vertical'\r\n                                form={form}\r\n                                name=\"register\"\r\n                                onFinish={handleSubmit}\r\n                                scrollToFirstError\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    onChange={handleChange('name')}\r\n                                    label={\r\n                                        <span>\r\n                                            Username&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n                                                <QuestionCircleOutlined />\r\n                                            </Tooltip>\r\n                                        </span>\r\n                                    }\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your username!',\r\n                                            whitespace: true,\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n                                    label=\"E-mail\"\r\n                                    onChange={handleChange('email')}\r\n                                    rules={[\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    onChange={handleChange('password')}\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                    ]}\r\n                                    hasFeedback\r\n                                >\r\n                                    <Input.Password />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"confirm\"\r\n                                    label=\"Confirm Password\"\r\n                                    onChange={handleChange('password2')}\r\n                                    dependencies={['password']}\r\n                                    hasFeedback\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please confirm your password!',\r\n                                        },\r\n                                        ({ getFieldValue }) => ({\r\n                                            validator(_, value) {\r\n                                                if (!value || getFieldValue('password') === value) {\r\n                                                    return Promise.resolve();\r\n                                                }\r\n\r\n                                                return Promise.reject('The two passwords that you entered do not match!');\r\n                                            },\r\n                                        }),\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password />\r\n                                </Form.Item>\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">\r\n                                        Register\r\n        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\DAVID\\server\\client\\src\\helpers\\auth.js",[],"C:\\Users\\DAVID\\server\\client\\src\\utils\\AppRoute.js",[],"C:\\Users\\DAVID\\server\\client\\src\\components\\layout.js",[],"C:\\Users\\DAVID\\server\\client\\src\\views\\Verify.js",["41","42","43"],"import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport jwt from 'jsonwebtoken'\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuth } from \"../helpers/auth\"\r\nimport {\r\n    Row, Card, Button, Breadcrumb, Divider\r\n} from 'antd';\r\n\r\n\r\n\r\nconst Verify = ({ match }) => {\r\n    const [formData, setFormData] = React.useState({\r\n        name: '',\r\n        token: '',\r\n        show: true\r\n    })\r\n\r\n    const { name, token, show } = formData\r\n    const tailFormItemLayout = {\r\n        wrapperCol: {\r\n            xs: {\r\n                span: 24,\r\n                offset: 0,\r\n            },\r\n            sm: {\r\n                span: 16,\r\n                offset: 8,\r\n            },\r\n\r\n        },\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.post(`${process.env.REACT_APP_URL}/api/activate`, {\r\n            token\r\n        }).then(res => {\r\n            setFormData({ ...formData, show: false });\r\n            toast.success(res.data.message);\r\n        }).catch(err => {\r\n            toast.error(err.response.data.error)\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n\r\n        let token = match.params.token\r\n        let name = jwt.decode(token)\r\n        if (token) {\r\n            setFormData({ ...formData, ...name, token: token })\r\n            console.log(formData)\r\n        }\r\n    }, []);\r\n\r\n\r\n    if (isAuth()) {\r\n        <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <Row justify=\"center\" align=\"middle\"  >\r\n                    <div className=\"ant-col ant-col-xs-24 ant-col-xl-8\">\r\n                        <Card justify=\"center\" align=\"middle\" >\r\n                            <h3>Hello {name}, Activate your account</h3>\r\n                            <Divider></Divider>\r\n                            <Button type=\"primary\" shape=\"round\" size=\"large\" onClick={e => handleSubmit(e)}>\r\n                                Activate email\r\n        </Button>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Verify\r\n","C:\\Users\\DAVID\\server\\client\\src\\views\\Login.js",["44","45","46","47","48"],"import React from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Breadcrumb, Row, Card, Button, Checkbox\r\n} from 'antd';\r\n\r\nimport { isAuth } from '../helpers/auth'\r\nconst Login = () => {\r\n    const [formData, setFormData] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (values) => {\r\n        setFormData({ ...formData, ...values })\r\n        console.log(values)\r\n    }\r\n    const layout = {\r\n        labelCol: {\r\n            span: 8,\r\n        },\r\n        wrapperCol: {\r\n            span: 16,\r\n        },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: {\r\n            offset: 8,\r\n            span: 16,\r\n        },\r\n    };\r\n    const handleChange = key => e => {\r\n        setFormData({ ...formData, [key]: e.target.value })\r\n\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        setFormData({ ...formData, ...values })\r\n        if (email && password) {\r\n            axios.post(`${process.env.REACT_APP_URL}/api/login`, {\r\n                email, password\r\n            }).then(res => {\r\n                toast.success(res.data.message)\r\n            }).catch(err => {\r\n                toast.error(err.response.data.error)\r\n            })\r\n\r\n        } else {\r\n            toast.error('Fill all fields')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Login</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-content\">\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={handleSubmit}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":22,"column":11,"nodeType":"55","messageId":"56","endLine":22,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":21,"column":26,"nodeType":"55","messageId":"56","endLine":21,"endColumn":30},{"ruleId":"53","severity":1,"message":"58","line":22,"column":11,"nodeType":"55","messageId":"56","endLine":22,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":54,"column":8,"nodeType":"61","endLine":54,"endColumn":10,"suggestions":"62"},{"ruleId":"53","severity":1,"message":"63","line":7,"column":17,"nodeType":"55","messageId":"56","endLine":7,"endColumn":20},{"ruleId":"53","severity":1,"message":"64","line":7,"column":22,"nodeType":"55","messageId":"56","endLine":7,"endColumn":26},{"ruleId":"53","severity":1,"message":"65","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":16},{"ruleId":"53","severity":1,"message":"66","line":19,"column":11,"nodeType":"55","messageId":"56","endLine":19,"endColumn":19},{"ruleId":"53","severity":1,"message":"67","line":37,"column":11,"nodeType":"55","messageId":"56","endLine":37,"endColumn":23},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'formLayout' is assigned a value but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'tailFormItemLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'formData' and 'match.params.token'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["70"],"'Row' is defined but never used.","'Card' is defined but never used.","'isAuth' is defined but never used.","'onChange' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [formData, match.params.token]",{"range":"73","text":"74"},[1421,1423],"[formData, match.params.token]"]